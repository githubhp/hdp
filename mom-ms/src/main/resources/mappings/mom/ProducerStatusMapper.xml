<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.br.mom.ms.dao.ProducerStatusMapper">
	<resultMap id="BaseResultMap" type="com.br.mom.ms.model.ProducerStatus">
		<id column="id" property="id" jdbcType="INTEGER" />
		<result column="producer_id" property="producerId" jdbcType="INTEGER" />
		<result column="enqueue" property="enqueue" jdbcType="BIGINT" />
		<result column="partition_data" property="partitionData"
			jdbcType="VARCHAR" />
		<result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
		<result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
	</resultMap>
	<sql id="Base_Column_List">
		id, producer_id, enqueue,partition_data,
		update_time,create_time
	</sql>
	<select id="selectSelective" resultMap="BaseResultMap"
		parameterType="com.br.mom.ms.model.ProducerStatus">
		select
		<include refid="Base_Column_List" />
		from (select id,producer_id,max(enqueue)as
		enqueue,partition_data,max(update_time)as update_time,create_time from
		producer_status group by producer_id) tmp
	</select>
	<select id="selectByPage" resultMap="BaseResultMap">
		select
		id, producer_id,
		enqueue,
		update_time,create_time
		from (select
		id,producer_id,max(enqueue)as
		enqueue,max(update_time)as
		update_time,create_time from
		producer_status group by producer_id order
		by producer_id asc limit #{startIndex},#{pageSize}) tmp
	</select>
	<select id="selectTotalRecords" resultType="java.lang.Integer">
		select
		count(*)
		from (select
		id,producer_id,max(enqueue)as
		enqueue,max(update_time)as
		update_time,create_time from
		producer_status
		group by producer_id) tmp
	</select>

	<select id="selectAllSelective" resultMap="BaseResultMap"
		parameterType="com.br.mom.ms.model.ProducerStatus">
		select
		<include refid="Base_Column_List" />
		from producer_status
		where 1=1
		<if test="id != null">
			and id = #{id,jdbcType=INTEGER}
		</if>
		<if test="producerId != null">
			and producer_id = #{producerId,jdbcType=INTEGER}
		</if>
		<if test="enqueue != null">
			and enqueue = #{enqueue,jdbcType=BIGINT}
		</if>
		<if test="partitionData != null">
			and partition_data = #{partitionData,jdbcType=VARCHAR}
		</if>
		<if test="updateTime != null">
			and update_time = #{updateTime,jdbcType=TIMESTAMP}
		</if>
		<if test="createTime != null">
			and create_time = #{createTime,jdbcType=TIMESTAMP}
		</if>
	</select>
	<select id="selectByPrimaryKey" resultMap="BaseResultMap"
		parameterType="java.lang.Integer">
		select
		<include refid="Base_Column_List" />
		from producer_status
		where id = #{id,jdbcType=INTEGER}
	</select>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
		delete from
		producer_status
		where id = #{id,jdbcType=INTEGER}
	</delete>
	<insert id="insert" parameterType="com.br.mom.ms.model.ProducerStatus"
		useGeneratedKeys="true" keyProperty="id">
		insert into producer_status (
		producer_id, enqueue,partition_data,update_time,
		create_time)
		values
		(#{producerId,jdbcType=INTEGER},
		#{enqueue,jdbcType=BIGINT},
		#{partitionData,jdbcType=VARCHAR},
		#{updateTime,jdbcType=TIMESTAMP},
		#{createTime,jdbcType=TIMESTAMP})
	</insert>
	<insert id="insertSelective" useGeneratedKeys="true"
		keyProperty="id" parameterType="com.br.mom.ms.model.ProducerStatus">
		insert into producer_status
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="id != null">
				id,
			</if>
			<if test="producerId != null">
				producer_id,
			</if>
			<if test="enqueue != null">
				enqueue,
			</if>
			<if test="partitionData != null">
				partition_data,
			</if>
			<if test="updateTime != null">
				update_time,
			</if>
			<if test="createTime != null">
				create_time,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="id != null">
				#{id,jdbcType=INTEGER},
			</if>
			<if test="producerId != null">
				#{producerId,jdbcType=INTEGER},
			</if>
			<if test="enqueue != null">
				#{enqueue,jdbcType=BIGINT},
			</if>
			<if test="partitionData != null">
				#{partitionData,jdbcType=VARCHAR},
			</if>
			<if test="createTime != null">
				#{updateTime,jdbcType=TIMESTAMP},
			</if>
			<if test="createTime != null">
				#{createTime,jdbcType=TIMESTAMP},
			</if>
		</trim>
	</insert>
	<update id="updateByPrimaryKeySelective" parameterType="com.br.mom.ms.model.ProducerStatus">
		update producer_status
		<set>
			<if test="producerId != null">
				producer_id = #{producerId,jdbcType=INTEGER},
			</if>
			<if test="enqueue != null">
				enqueue = #{enqueue,jdbcType=BIGINT},
			</if>
			<if test="partitionData != null">
				partition_data = #{partitionData,jdbcType=VARCHAR},
			</if>
			<if test="updateTime != null">
				update_time = #{updateTime,jdbcType=TIMESTAMP},
			</if>
			<if test="createTime != null">
				create_time = #{createTime,jdbcType=TIMESTAMP},
			</if>
		</set>
		where id = #{id,jdbcType=INTEGER}
	</update>
	<update id="updateByPrimaryKey" parameterType="com.br.mom.ms.model.ProducerStatus">
		update
		producer_status
		set producer_id = #{producerId,jdbcType=INTEGER},
		enqueue = #{enqueue,jdbcType=BIGINT},
		partition_data =
		#{partitionData,jdbcType=VARCHAR}
		update_time =
		#{updateTime,jdbcType=TIMESTAMP}
		create_time =
		#{createTime,jdbcType=TIMESTAMP}
		where id = #{id,jdbcType=INTEGER}
	</update>
	<update id="addEnqueue" parameterType="com.br.mom.ms.model.ProducerStatus">
		update
		producer_status
		set
		enqueue=enqueue+#{enqueue,jdbcType=INTEGER}
		where
		producer_id =
		#{producerId,jdbcType=INTEGER}
	</update>
</mapper>