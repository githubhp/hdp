<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.br.mom.ms.dao.ConsumerStatusMapper">
	<resultMap id="BaseResultMap" type="com.br.mom.ms.model.ConsumerStatus">
		<id column="id" property="id" jdbcType="INTEGER" />
		<result column="consumer_id" property="consumerId" jdbcType="INTEGER" />
		<result column="dequeue" property="dequeue" jdbcType="BIGINT" />
		<result column="partition_data" property="partitionData"
			jdbcType="VARCHAR" />
		<result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
		<result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
	</resultMap>
	<sql id="Base_Column_List">
		id, consumer_id, dequeue,
		partition_data,create_time,update_time
	</sql>
	<insert id="insert" parameterType="com.br.mom.ms.model.ConsumerStatus"
		useGeneratedKeys="true" keyProperty="id">
		insert into consumer_status (
		consumer_id, dequeue,partition_data,
		create_time,update_time)
		values (
		#{consumerId,jdbcType=INTEGER},
		#{dequeue,jdbcType=BIGINT},#{partitionData,jdbcType=VARCHAR},
		#{createTime,jdbcType=TIMESTAMP},#{updateTime,jdbcType=TIMESTAMP})
	</insert>
	<insert id="insertSelective" parameterType="com.br.mom.ms.model.ConsumerStatus"
		useGeneratedKeys="true" keyProperty="id">
		insert into consumer_status
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="id != null">
				id,
			</if>
			<if test="consumerId != null">
				consumer_id,
			</if>
			<if test="dequeue != null">
				dequeue,
			</if>
			<if test="partitionData != null">
				partition_data,
			</if>
			<if test="createTime != null">
				create_time,
			</if>
			<if test="updateTime != null">
				update_time,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="id != null">
				#{id,jdbcType=INTEGER},
			</if>
			<if test="consumerId != null">
				#{consumerId,jdbcType=INTEGER},
			</if>
			<if test="dequeue != null">
				#{dequeue,jdbcType=BIGINT},
			</if>
			<if test="partitionData != null">
				#{partitionData,jdbcType=VARCHAR},
			</if>
			<if test="createTime != null">
				#{createTime,jdbcType=TIMESTAMP},
			</if>
			<if test="updateTime != null">
				#{updateTime,jdbcType=TIMESTAMP},
			</if>
		</trim>
	</insert>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
		delete from
		consumer_status
		where id = #{id,jdbcType=INTEGER}
	</delete>
	<update id="updateByPrimaryKeySelective" parameterType="com.br.mom.ms.model.ConsumerStatus">
		update consumer_status
		<set>
			<if test="consumerId != null">
				consumer_id = #{consumerId,jdbcType=INTEGER},
			</if>
			<if test="dequeue != null">
				dequeue = #{dequeue,jdbcType=BIGINT},
			</if>
			<if test="partitionData != null">
				partition_data = #{partitionData,jdbcType=VARCHAR},
			</if>
			<if test="createTime != null">
				create_time = #{createTime,jdbcType=TIMESTAMP},
			</if>
			<if test="updateTime != null">
				update_time = #{updateTime,jdbcType=TIMESTAMP},
			</if>
		</set>
		where id = #{id,jdbcType=INTEGER}
	</update>
	<update id="updateByPrimaryKey" parameterType="com.br.mom.ms.model.ConsumerStatus">
		update
		consumer_status
		set consumer_id = #{consumerId,jdbcType=INTEGER},
		dequeue = #{dequeue,jdbcType=BIGINT},
		partition_data =
		#{partitionData,jdbcType=VARCHAR},
		create_time =
		#{createTime,jdbcType=TIMESTAMP},
		update_time =
		#{updateTime,jdbcType=TIMESTAMP}
		where id = #{id,jdbcType=INTEGER}
	</update>
	<update id="addDequeue" parameterType="com.br.mom.ms.model.ConsumerStatus">
		update
		consumer_status
		set
		dequeue=dequeue+#{dequeue,jdbcType=BIGINT}
		where
		consumer_id =
		#{consumerId,jdbcType=INTEGER}
	</update>
	<select id="selectSelective" resultMap="BaseResultMap"
		parameterType="com.br.mom.ms.model.ConsumerStatus">
		select
		<include refid="Base_Column_List" />
		from
		(select id,consumer_id,max(dequeue)as
		dequeue,partition_data,create_time,max(update_time)as update_time from
		consumer_status group by consumer_id) tmp
	</select>
	<select id="selectByPage" resultMap="BaseResultMap">
		select
		id, consumer_id,
		dequeue, create_time, update_time
		from
		(select
		id,consumer_id,max(dequeue)as
		dequeue,create_time,max(update_time)as
		update_time from
		consumer_status group by consumer_id order by
		consumer_id asc limit
		#{startIndex},#{pageSize}) tmp
	</select>
	<select id="selectTotalRecords" resultType="java.lang.Integer">
		select
		count(*)
		from
		(select id,consumer_id,max(dequeue)as
		dequeue,partition_data,create_time,max(update_time)as update_time from
		consumer_status group by consumer_id) tmp
	</select>
	<select id="selectAllSelective" resultMap="BaseResultMap"
		parameterType="com.br.mom.ms.model.ConsumerStatus">
		select
		<include refid="Base_Column_List" />
		from consumer_status
		where 1=1
		<if test="id != null">
			and id = #{id,jdbcType=INTEGER}
		</if>
		<if test="consumerId != null">
			and consumer_id = #{consumerId,jdbcType=INTEGER}
		</if>
		<if test="dequeue != null">
			and dequeue = #{dequeue,jdbcType=BIGINT}
		</if>
		<if test="partitionData != null">
			and partition_data = #{partitionData,jdbcType=VARCHAR}
		</if>
		<if test="createTime != null">
			and create_time = #{createTime,jdbcType=TIMESTAMP}
		</if>
		<if test="updateTime != null">
			and update_time = #{updateTime,jdbcType=TIMESTAMP}
		</if>
	</select>
	<select id="selectByPrimaryKey" resultMap="BaseResultMap"
		parameterType="java.lang.Integer">
		select
		<include refid="Base_Column_List" />
		from consumer_status
		where id = #{id,jdbcType=INTEGER}
	</select>
	<select id="selectByConsumerId" resultMap="BaseResultMap"
		parameterType="java.lang.Integer">
		select
		id,consumer_id,dequeue,update_time,create_time
		from
		(select id,consumer_id,max(dequeue)-min(dequeue) as
		dequeue,max(update_time) as update_time,create_time from
		consumer_status where
		consumer_id=#{consumerId,jdbcType=INTEGER} group
		by date(update_time))
		tmp
	</select>
	<select id="selectByConsumerIdAndTime" resultMap="BaseResultMap"
		parameterType="java.lang.Integer">
		select
		id,consumer_id,dequeue,update_time,create_time
		from
		(select
		max(id) as id,consumer_id,max(dequeue) as
		dequeue,max(update_time) as
		update_time,create_time
		from
		consumer_status where 1=1
		<if test="consumerId != null">
			and consumer_id = #{consumerId,jdbcType=INTEGER}
		</if>
		<if test="updateTime != null">
			and update_time &gt;= #{updateTime,jdbcType=TIMESTAMP}
		</if>
		<if test="createTime != null">
			and update_time &lt;= #{createTime,jdbcType=TIMESTAMP}
		</if>
		)tmp
	</select>
	<select id="selectByConsumerIdAndDateTime" resultMap="BaseResultMap"
		parameterType="com.br.mom.ms.model.ConsumerStatus">
		select
		id,consumer_id,dequeue,update_time,create_time
		from consumer_status
		where 1=1
		<if test="consumerId != null">
			and consumer_id = #{consumerId,jdbcType=INTEGER}
		</if>
		<if test="updateTime != null">
			and update_time &lt;=#{updateTime,jdbcType=TIMESTAMP}"%"
		</if>
		<if test="updateTime != null">
			and update_time &gt;=#{createTime,jdbcType=TIMESTAMP}"%"
		</if>
		order by update_time asc
	</select>
</mapper>